<% versions = locals.fetch(:object).versions %>
<% if versions.any? %>
  <% timezone = Time.zone %>

  <h3><%= title rescue 'Changes' %></h3>

  <div class="table-responsive">
    <table class="table table-bordered table-condensed versions">
      <thead>
        <tr>
          <th>When</th>
          <th>Who</th>
          <th>What</th>
          <th>Old Value</th>
          <th>New Value</th>
        </tr>
      </thead>
      <tbody>
        <% versions.each_with_index do |version, i| %>
          <% user = User.find(version.whodunnit) rescue nil %>
          <% name = user.name rescue version.whodunnit %>
          <% roles = user.try(:roles).try(:to_sentence).try(:capitalize) %>
          <% ex = Array(locals[:exclude]).map { |x| x.to_s } << 'updated_at' %>
          <% changes = Array(version.changeset).reject { |c| c[0].in? ex } %>
          <% rowspan = [1, changes.count].max %>
          <tr class="<%= even_odd(i) %>">
            <td rowspan="<%= rowspan %>">
              <%= version.created_at.in_time_zone(timezone) %>
            </td>
            <td rowspan="<%= rowspan %>">
              <%= user ? link_to(h(name), user) : h(name) %>
            </td>
            <td><%= changes.first.try(:[], 0).try(:to_s).try(:humanize) || version.event.humanize %></td>
            <td><%= versions_table_value(changes.first, :first, timezone) %></td>
            <td><%= versions_table_value(changes.first, :last, timezone) %></td>
          </tr>
          <% Array(changes[1..-1]).each do |change| %>
            <tr class="<%= even_odd(i) %>">
              <td><%= change[0].try(:to_s).try(:humanize) %></td>
              <td><%= versions_table_value(change, :first, timezone) %></td>
              <td><%= versions_table_value(change, :last, timezone) %></td>
            </tr>
          <% end %>
        <% end %>
      </tbody>
    </table>
  </div>
<% end %>
